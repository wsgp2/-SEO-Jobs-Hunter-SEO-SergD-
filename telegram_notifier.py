import os
import asyncio
from datetime import datetime
from loguru import logger
import telebot
from telebot.async_telebot import AsyncTeleBot
import emoji
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
BOT_TOKEN = "7670172403:AAFtYayGm9ocfG6wyNoXox0SPKXfSvcXj9M"
CHANNEL_ID = "-1002422777931"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = AsyncTeleBot(BOT_TOKEN)

async def send_vacancy_notification(vacancy_data: dict):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏ –≤ –∫–∞–Ω–∞–ª"""
    try:
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É
        date = datetime.strptime(vacancy_data['date'], '%Y-%m-%d %H:%M:%S')
        date_str = date.strftime('%d.%m.%Y %H:%M')
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –≤–∞–∫–∞–Ω—Å–∏–∏ (–æ–±—Ä–µ–∑–∞–µ–º –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π)
        vacancy_text = vacancy_data['text'][:1000]
        if len(vacancy_data['text']) > 1000:
            vacancy_text += "..."
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ HTML
        message = (
            f'<b>üîç –ù–æ–≤–∞—è SEO –≤–∞–∫–∞–Ω—Å–∏—è!</b>\n\n'
            f'üìå <i>Pin: @vikapaleshko</i>\n\n'
            f'<b>üìù –û–ø–∏—Å–∞–Ω–∏–µ:</b>\n'
            f'<pre>{vacancy_text}</pre>\n\n'
            f'<b>üíº –ö–∞–Ω–∞–ª:</b> <code>{vacancy_data["channel_name"]}</code>\n'
            f'<b>üìÖ –î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:</b> <code>{date_str}</code>\n'
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç—ã, –µ—Å–ª–∏ –µ—Å—Ç—å
        if vacancy_data.get('contacts'):
            message += f'<b>üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã:</b> <code>{vacancy_data["contacts"]}</code>\n'
            
        # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞—Ä–ø–ª–∞—Ç—É, –µ—Å–ª–∏ –µ—Å—Ç—å
        if vacancy_data.get('salary'):
            message += f'<b>üí∞ –ó–∞—Ä–ø–ª–∞—Ç–∞:</b> <code>{vacancy_data["salary"]}</code>\n'
            
        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        message += f'\n<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n'
        message += f'üëÅ –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: <code>{vacancy_data["views"]}</code>\n'
        message += f'üîÑ –†–µ–ø–æ—Å—Ç—ã: <code>{vacancy_data["forwards"]}</code>\n'
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        message += '\n' + '‚îÄ' * 30 + '\n'
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª
        message += f'üîó <a href="{vacancy_data["message_link"]}">–°—Å—ã–ª–∫–∞ –Ω–∞ –æ—Ä–∏–≥–∏–Ω–∞–ª</a>'
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        await bot.send_message(
            CHANNEL_ID,
            message,
            parse_mode='HTML',
            disable_web_page_preview=True
        )
        
        logger.info(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤–∞–∫–∞–Ω—Å–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")

async def test_notification():
    """–¢–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
    test_data = {
        'text': '–ò—â–µ–º –æ–ø—ã—Ç–Ω–æ–≥–æ SEO-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –≤ –Ω–∞—à—É –∫–æ–º–∞–Ω–¥—É! üöÄ\n\n–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:\n- –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –æ—Ç 2 –ª–µ—Ç\n- –ó–Ω–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ SEO\n- –£–º–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π\n\n–£—Å–ª–æ–≤–∏—è:\n- –£–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞\n- –ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫\n- –î—Ä—É–∂–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞',
        'channel_name': 'üîç SEO –í–∞–∫–∞–Ω—Å–∏–∏',
        'date': '2025-02-07 21:55:00',
        'contacts': 'HR –º–µ–Ω–µ–¥–∂–µ—Ä: @test_contact\n–¢–µ–ª–µ—Ñ–æ–Ω: +7 (999) 999-99-99',
        'salary': '150 000 - 200 000 ‚ÇΩ',
        'views': 1250,
        'forwards': 15,
        'message_link': 'https://t.me/test_channel/123'
    }
    try:
        await send_vacancy_notification(test_data)
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –±–æ—Ç–∞
        await bot.close_session()
        await asyncio.sleep(0.250)  # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π

if __name__ == '__main__':
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    asyncio.run(test_notification())
