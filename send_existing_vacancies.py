import asyncio
import pandas as pd
from telegram_notifier import send_vacancy_notification
from loguru import logger
import time

async def send_all_vacancies():
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Å–µ—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –≤–∞–∫–∞–Ω—Å–∏–π –≤ –∫–∞–Ω–∞–ª"""
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Excel
        df = pd.read_excel('seo_vacancies.xlsx')
        
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç–æ–ª–±–µ—Ü –¥–∞—Ç—ã –≤ datetime
        df['date'] = pd.to_datetime(df['date'])
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è 24 —á–∞—Å–∞ –Ω–∞–∑–∞–¥
        last_24h = pd.Timestamp.now() - pd.Timedelta(days=1)
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º SEO –≤–∞–∫–∞–Ω—Å–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞
        recent_vacancies = df[
            (df['date'] >= last_24h) & 
            (df['contains_seo_vacancy'] == True)
        ]
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ (—Å–Ω–∞—á–∞–ª–∞ —Å—Ç–∞—Ä—ã–µ)
        recent_vacancies = recent_vacancies.sort_values('date', ascending=True)
        
        logger.info(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(recent_vacancies)} SEO –≤–∞–∫–∞–Ω—Å–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é –≤–∞–∫–∞–Ω—Å–∏—é
        for index, row in recent_vacancies.iterrows():
            try:
                # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ —Å–ª–æ–≤–∞—Ä—å –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞—Ç—É
                vacancy_dict = row.to_dict()
                vacancy_dict['date'] = row['date'].strftime('%Y-%m-%d %H:%M:%S')
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                await send_vacancy_notification(vacancy_dict)
                
                # –î–µ–ª–∞–µ–º –ø–∞—É–∑—É –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏ (—á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ–≤—ã—Å–∏—Ç—å –ª–∏–º–∏—Ç—ã Telegram)
                await asyncio.sleep(3)
                
                logger.info(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—è {index + 1}/{len(recent_vacancies)}")
                
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–∞–∫–∞–Ω—Å–∏–∏ {index}: {str(e)}")
                continue
        
        logger.info("üéâ –í—Å–µ –≤–∞–∫–∞–Ω—Å–∏–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {str(e)}")

if __name__ == '__main__':
    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É
    asyncio.run(send_all_vacancies())
